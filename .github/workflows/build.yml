name: MacroMate Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v7

      - name: Cache Nix
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Build
        run: nix develop --command dotnet build --configuration Release

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: MacroMate-release-${{ github.sha }}
          path: |
            MacroMate/bin/x64/Release
            !MacroMate/bin/x64/Release/MacroMate

      - name: Prepare Release
        run: mv MacroMate/bin/x64/Release/MacroMate/latest.zip MacroMate/bin/x64/Release/MacroMate/MacroMate.zip

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./MacroMate/bin/x64/Release/MacroMate/MacroMate.zip

    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: ./MacroMate/bin/Release/MacroMate/latest.zip
    #       asset_name: MacroMate.zip
    #       asset_content_type: application/zip

    #   - name: Create Release
    #     id: create_release
    #     uses: actions/create-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       tag_name: ${{ github.ref }}
    #       release_name: MacroMate ${{ github.ref }}
    #       draft: false
    #       prerelease: false

    #   - name: Upload Release Asset
    #     id: upload-release-asset
    #     uses: softprops/action-gh-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: ./MacroMate/bin/Release/MacroMate/latest.zip
    #       asset_name: MacroMate.zip
    #       asset_content_type: application/zip

    #   name: Release
    #     uses: softprops/action-gh-release@v1
    #     if: startsWith(github.ref, 'refs/tags/')
    #     with:
    #       files: Release.txt

    # - name: Update repo.json
    #   run: .github/scripts/update-repo-json.sh

    #   - name: Update repo.json
    #     shell: pwsh
    #     run: |
    #       current_assembly = $(jq .[].AssemblyVersion repo.json)
    #       build_assembly = $(jq .[].AssemblyVersion MacroMate/bin/Release/MacroMate/MacroMate.json)
    #       if [[ current_assembly -eq  ]]

    #   - name: Write out repo.json
    #     run: |
    #       $ver = '${{ github.ref }}' -replace 'refs/tags/',''
    #       $path = './base_repo.json'
    #       $new_path = './repo.json'
    #       $content = get-content -path $path
    #       $content = $content -replace '1.0.0.0',$ver
    #       set-content -Path $new_path -Value $content

    #   - name: Commit repo.json
    #     run: |
    #       git config --global user.name "Actions User"
    #       git config --global user.email "actions@github.com"
    #       git fetch origin master && git checkout master
    #       git add repo.json
    #       git commit -m "Update repo.json for ${{ github.ref }}" || true
    #       git push origin main || true

    #     $repo = Get-Content 'repo.json' -raw | ConvertFrom-Json
    #     $build = Get-Content 'IINACT/bin/Release/win-x64/IINACT/IINACT.json' -raw | ConvertFrom-Json
    #     if ($repo.AssemblyVersion -eq $build.AssemblyVersion) {
    #       Exit
    #     }
    #     Write-Output "RELEASE_VERSION=$($build.AssemblyVersion)" >> $env:GITHUB_ENV
    #     $repo.AssemblyVersion = $repo.TestingAssemblyVersion = $build.AssemblyVersion
    #     $repo.DownloadLinkInstall = 'https://github.com/marzent/IINACT/releases/download/v' + $repo.AssemblyVersion + '/IINACT.zip'
    #     $repo.DownloadLinkTesting =  'https://github.com/marzent/IINACT/releases/download/v' + $repo.TestingAssemblyVersion + '/IINACT.zip'
    #     $repo.DownloadLinkUpdate = $repo.DownloadLinkInstall
    #     $repo | ConvertTo-Json | % { "[`n" + $_ + "`n]" } | Set-Content 'repo.json'
